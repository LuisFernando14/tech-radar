package com.deiva.deiva;

import an.awesome.pipelinr.Pipeline;
import an.awesome.pipelinr.Pipelinr;
import com.deiva.deiva.application.commands.Ping;
import com.deiva.deiva.application.handlers.Pong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.deiva.deiva.infraestructure.repositories.UserRepository;
import com.deiva.deiva.model.entities.User;

import java.util.stream.Stream;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        var a = userRepository.findAll();
        Pipeline pipeline = new Pipelinr()
                .with(
                        () -> Stream.of(new Pong())
                );
        var b = new Ping("hola").execute(pipeline);
        System.out.println("aqui esta la variabale b==================================");
        System.out.println(b);
        return a;
        // return userRepository.findAll();
    }
}