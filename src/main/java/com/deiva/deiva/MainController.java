package com.deiva.deiva;

import an.awesome.pipelinr.Pipeline;
import com.deiva.deiva.infraestructure.Users;
import com.deiva.deiva.infraestructure.services.UserService;
import com.deiva.deiva.model.dto.AddUserDto;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import com.deiva.deiva.model.entities.User;

import javax.validation.Valid;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired
    Pipeline pipeline;
    //@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private final UserService userService;
    private final ModelMapper modelMapper = new ModelMapper();

    @Autowired
    public MainController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@Valid @RequestBody AddUserDto addUserDto) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        User user = new User();
        modelMapper.map(addUserDto, user);
        return userService.save(user);
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        Iterable<User> response = new Users().execute(pipeline);
        return response;
    }
}